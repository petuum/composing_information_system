name: Python Build

on:
  push:
  pull_request:
    branches: [ main ]
  repository_dispatch:
    branches: [ main ]
    types: [trigger-composable-workflow]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.6, 3.7 ]
        torch-version: [ 1.5.0]
        tensorflow-version: [ 1.15.0 ]

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.ref }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --progress-bar off --upgrade pip
          pip install --progress-bar off Django django-guardian
          pip install --progress-bar off pylint==2.6.0 flake8==3.8.2 mypy==0.790 pytest==5.1.3
          pip install --progress-bar off coverage codecov
      - name: Install deep learning frameworks
        run: |
          pip install --progress-bar off torch==${{ matrix.torch-version }}
          pip install --progress-bar off tensorflow==${{ matrix.tensorflow-version }}
      - name: Install Texar
        run: |
          git clone https://github.com/asyml/texar-pytorch.git
          cd texar-pytorch
          pip install --progress-bar off .
          cd ..
          # Remove them to avoid confusing pytest.
          rm -rf texar-pytorch
      - name: Install the requirements
        run: |
          pip install --progress-bar off -r requirements.txt
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 composable_source/ examples/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 composable_source/ examples/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Lint with pylint
        run: |
          pylint composable_source/ examples/ tests/
      - name: Lint with mypy
        run: |
          mypy composable_source/ examples/ tests/
      - name: Start Elastic Server
        run: |
          wget -q https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.11.1-linux-x86_64.tar.gz
          tar -xzf elasticsearch-7.11.1-linux-x86_64.tar.gz
          rm -rf elasticsearch-7.11.1-linux-x86_64.tar.gz
          elasticsearch-7.11.1/bin/elasticsearch -d
      - name: Test with pytest and run coverage
        run: |
          coverage run -m pytest